#!/usr/bin/env python


from waflib import Logs


def options(opt):
	opt.add_option('--use-vpulib-backend', action = 'store_true', default = False, help = 'use the vpulib backend instead of the vpu wrapper one [EXPERIMENTAL] [default: %default]')


def configure(conf):
	conf.env['USE_VPULIB_BACKEND'] = conf.options.use_vpulib_backend

	if conf.options.use_vpulib_backend:
		if conf.check_cc(lib = 'vpu', uselib_store = 'VPULIB', mandatory = 0):
			Logs.pprint('GREEN', 'found installed imxvpu library - VPU elements and internal imxvpuapi copy will be built')
			conf.env['BUILD_VPU_ELEMENTS'] = 1
			conf.env['VPUAPI_USELIBS'] = ['VPULIB']
			conf.env['VPUAPI_BACKEND_SOURCE'] = ['imxvpuapi/imxvpuapi_vpulib.c']
		else:
			Logs.pprint('YELLOW', 'could not find installed imxvpu library - VPU elements will not be built')

		with_sof_stuff = conf.check_cc(fragment = '''
			#include <vpu_lib.h>
			int main() {
				return ENC_ENABLE_SOF_STUFF * 0;
			}
			''',
			uselib = 'VPULIB',
			mandatory = False,
			execute = False,
			msg = 'checking if ENC_ENABLE_SOF_STUFF exists'
		)

		if with_sof_stuff:
			conf.define('HAVE_ENC_ENABLE_SOF_STUFF', 1)

	else:
		if conf.check_cfg(package = 'libfslvpuwrap >= 1.0.45', uselib_store = 'FSLVPUWRAPPER', args = '--cflags --libs', mandatory = 1):
			Logs.pprint('GREEN', 'found installed libfslvpuwrap library - VPU elements and internal imxvpuapi copy will be built')
			conf.env['BUILD_VPU_ELEMENTS'] = 1
			conf.env['VPUAPI_USELIBS'] = ['FSLVPUWRAPPER']
			conf.env['VPUAPI_BACKEND_SOURCE'] = ['imxvpuapi/imxvpuapi_fslwrapper.c']
		else:
			Logs.pprint('YELLOW', 'could not find installed libfslvpuwrap library - VPU elements will not be built')


def build(bld):
	if bld.env['BUILD_VPU_ELEMENTS']:
		bld(
			features = ['c'],
			includes = ['.', '../../..'],
			export_includes = ['.'],
			uselib = bld.env['VPUAPI_USELIBS'],
			source = ['imxvpuapi/imxvpuapi.c', 'imxvpuapi/imxvpuapi_jpeg.c', 'imxvpuapi/imxvpuapi_parse_jpeg.c'] + bld.env['VPUAPI_BACKEND_SOURCE'],
			name = 'imxvpuapi',
			target = 'imxvpuapi',
		)
